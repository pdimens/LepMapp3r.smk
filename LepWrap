#! /usr/bin/env bash

# Help text
if [[ -z "$1" ]]; then
  echo "Perform the modules of Lep-Map3 and/or Lep-Anchor" 
  echo "The config file (default: config.yml) must be configured"
  echo -e "The second positional argument is optional if your config file is named config.yml\n"
  printf "\033[01;32m"
  printf "[usage]"
  printf "\033[0m"
  echo "   LepWrap <# of threads> <config.yml>"
    printf "\033[01;32m"
  printf "[example]"
  printf "\033[0m"
  echo " LepWrap 16"
  printf "\033[01;32m"
  printf "[example]"
  printf "\033[0m"
  echo -e " LepWrap 30 kosambi.20iterations.yml"
  exit 1
fi

if [ -z "$CONDA_PREFIX" ]; then
  echo -e "No active conda environment detected and one is required for the pipeline to work. If you cloned the repository rather than installing the conda package, you may install the environment using:\n"
  printf "\033[01;32m"
  printf "conda env create -f conda_setup.yml\n\n"
  printf "\033[0m"
  echo -e "Then, activate it using:\n"
  printf "\033[01;32m"
  printf "conda activate lepwrap\n"
  printf "\033[0m"
  exit 1
fi

# Check for snakemake
if which snakemake &>/dev/null; then
  foo=1
else
  echo -e "ERROR:\nSnakemake installation is required to run LepWrap, but not found in the current environment."
  echo -e "It is likely LepWrap was not installed using [ana|mini]conda, which bundles all the dependencies."
  echo -e "Please install LepWrap using conda: "
  printf "\033[01;32m"
  printf "conda install -c bioconda lepwrap\n\n"
  printf "\033[0m"
  echo -e "Alternatively, if you cloned the repository, you may install the environment using:\n"
  printf "\033[01;32m"
  printf "conda env create -f conda_setup.yml\n"
  printf "\033[0m"
  exit 1
fi

# make sure the first argument is a number (number of threads)
# function from https://stackoverflow.com/a/61835747
is_int()  { case ${1#[-+]} in '' | *[!0-9]*              ) return 1;; esac ;}

if $(is_int $1); then
  foo=1
else
  echo "Error: the first argument must be the number of threads, as an integer."
  exit 1
fi

if [[ ! -z "$2" ]]; then
  if [ ! -f $2 ]; then
    echo -n "Error: Config file "
    printf "\033[01;32m"
    printf "$2"
    printf "\033[0m"
    echo " was not found, but it was created for you. Please edit it and run LepWrap again"
    generate_config.sh > $2
    exit 1
  else
    CONF=$2
  fi
else 
  if [ ! -f config.yml ]; then
    echo -n "Error: "
    printf "\033[01;32m"
    printf "config.yml"
    printf "\033[0m"
    echo " not found"
    echo " was not found, but it was created for you. Please edit it and run LepWrap again"
    generate_config.sh > config.yml
    exit 1
  fi
    CONF=config.yml
fi

lepmap(){
  printf "\033[01;32m"
  printf "Running Lep-Map3\n"
  printf "\033[0m"
  sleep 2s
  snakemake --cores $1 --snakefile $CONDA_PREFIX/bin/LepMap3.smk --configfile $CONF --directory .
}

lepanchor(){
  printf "\033[01;32m"
  printf "Running Lep-Anchor\n"
  printf "\033[0m"
  sleep 2s
  snakemake --cores $1 --snakefile $CONDA_PREFIX/bin/LepAnchor.smk --configfile $CONF --directory .
}

LM=$(grep "run_lepmap" $CONF | cut -d":" -f2 | xargs | tr '[:upper:]' '[:lower:]')
LA=$(grep "run_lepanchor" $CONF | cut -d":" -f2 | xargs | tr '[:upper:]' '[:lower:]')

if [ $LM == "true" ]; then
  lepmap $1 $CONF
else
  echo "Skipping Lep-Map3"
fi && if [ $LA == "true" ]; then
  lepanchor $1 $CONF
else
  echo "Skipping Lep-Anchor"
fi
